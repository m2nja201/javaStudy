import java.util.*;
class test1 {

    public static String[] solution(String[] records) {

        // Stack
        String name, act;

        int[] count = {0, 0}; // share comment
        String temp = "";
        Stack<Pair> alarm = new Stack<Pair>();
        Queue<Pair> restore = new LinkedList<Pair>();
        StringBuffer newName = new StringBuffer();

        for (int i = 0; i<records.length; i++){
            int index = records[i].indexOf(" ");    
            name = records[i].substring(0, index);
            act = records[i].substring(index+1);
            
            if (act.equals("notification")){
                restore.add(alarm.peek());
                alarm.pop();
                
            }
            else {    
                if (alarm.size() != 0){
                    if (alarm.peek().second.equals(act)){
                        if ( ((count[0] == 1) && (act.equals("share"))) || ((count[1] == 1) && (act.equals("comment"))) ){
                            temp = alarm.peek().first;
                            alarm.pop();
                            alarm.push(new Pair((name + " and "+temp), act));
                            System.out.println(alarm.peek().first);
                            if (act.equals("share")) count[0]++;
                            else count[1]++;
                        }
                        else if (((count[0] != 1) && (act.equals("share"))) || ( (count[1] != 1) && (act.equals("comment")))){
                            int index2 = alarm.peek().first.indexOf(" ");
                            temp = alarm.peek().first.substring(0, index2);
                            if (act.equals("share")) {
                                count[0]++;
                                alarm.pop();
                                newName.append(temp).append(" and ").append(count[0]).append(" others");
                                System.out.println(newName.toString()); /// 
                                alarm.push(new Pair(newName.toString(), act));
                                newName.setLength(0);
                            }
                            else {
                                count[1]++;
                                alarm.pop();
                                newName.append(temp).append(" and ").append(count[1]).append(" others");
                                alarm.push(new Pair(newName.toString(), act));
                                newName.setLength(0);
                            }
                        }
                    }
                    else {
                        if (act.equals("share")) count[1] = 0;
                        else count[0]=0;
                        alarm.push(new Pair(name, act));
                    }
                }
                else {
                    alarm.push(new Pair(name, act));
                }
                
            }
            System.out.println(name+ " : "+act+"  count[share] = "+count[0]+"    count[comment] = "+count[1]);
        }

        

        String[] answer = new String[restore.size()];
        int p = 0;
        while (!restore.isEmpty()){
            if (restore.peek().second.equals("share")){
                answer[p] = restore.peek().first + " shared your post";
                p++;
                restore.poll();
            }
            else {
                answer[p] = restore.peek().first + " commented on your post";
                p++;
                restore.poll();
            }
        }

        return answer;
    }


	
	public static void main(String [] args){
		String[] array = {"john share", "mary comment", "jay share", "check notification", "check notification", "sally comment", "james share", "check notification", "lee share", "laura share", "will share", "check notification", "alice comment", "check notification"};
		int output = 0;
		System.out.println(solution(array).toString());
	}
}

class Pair {
    String first = "";
    String second = "";

    Pair(String nickname, String Action){
        this.first = nickname;
        this.second = Action;
    }
}
